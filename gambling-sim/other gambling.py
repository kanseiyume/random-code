import random
import json
import os

def clear():
    os.system('cls' if os.name == 'nt' else 'clear')

# rarity:weight
with open("rarities.json") as file:
    possible = json.load(file)

def roll():
    simulation = int(input("how many rolls? "))
    returns = []
    for i in range(simulation):
        rarity = random.choices(list(possible.keys()), weights=possible.values())[0]
        returns.append(rarity)
        
    for x in returns:
        commons = returns.count("common")
        uncommons = returns.count("uncommon")
        rares = returns.count("rare")
        epic = returns.count("very rare")
        legendaries = returns.count("legendary")
        mythical = returns.count("mythical")
        perfect = returns.count("perfect")
        heavenly = returns.count("heavenly")
        godly = returns.count("godly")
        otherworldly = returns.count("otherworldly")
        sunlight = returns.count("sunlight")
        moonlight = returns.count("moonlight")
        stellar = returns.count("stellar")
        cosmic = returns.count("cosmic")
        galactic = returns.count("galactic")
        universal = returns.count("universal")
        celestial = returns.count("celestial")
        millenial = returns.count("millenial")
        eternal = returns.count("eternal")
        divine = returns.count("divine")
        sacred = returns.count("sacred")
        prismatic = returns.count("prismatic")
        radiant = returns.count("radiant")
        illustrious = returns.count("illustrious")
        magnificent = returns.count("magnificent")
        shining = returns.count("shining")
        amethyst = returns.count("amethyst")
        emerald = returns.count("emerald")
        ruby = returns.count("ruby")
        sapphire = returns.count("sapphire")
        diamond = returns.count("diamond")
        topaz = returns.count("topaz")
        opal = returns.count("opal")
        pearl = returns.count("pearl")
        clean = returns.count("clean")
        pristine = returns.count("pristine")
        pure = returns.count("pure")
        flawless = returns.count("flawless")
        whole = returns.count("whole")
        hollow = returns.count("hollow")
        empty = returns.count("empty")
        void = returns.count("void")
        dark = returns.count("dark")
        shadow = returns.count("shadow")
        dusk = returns.count("dusk")
        cruel = returns.count("cruel")
        evil = returns.count("evil")
        mystic = returns.count("mystic")
        magic = returns.count("magic")
        enchanted = returns.count("enchanted")
        charmed = returns.count("charmed")
        cursed = returns.count("cursed")
        bound = returns.count("bound")
        leashed = returns.count("leashed")
        acidic = returns.count("acidic")
        treasured = returns.count("treasured")
        ancient = returns.count("ancient")
        fabled = returns.count("fabled")
        holy = returns.count("holy")
        unholy = returns.count("unholy")
        true = returns.count("true")
        hidden = returns.count("hidden")
        failed = returns.count("failed")
        complete = returns.count("complete")
        
        
    print(f"common x{commons}")
    print(f"uncommon x{uncommons}")
    print(f"rare x{rares}")
    print(f"very rare x{epic}")
    print(f"legendary x{legendaries}")
    print(f"mythical x{mythical}")
    print(f"perfect x{perfect}")
    print(f"heavenly x{heavenly}")
    print(f"godly x{godly}")
    print(f"otherworldly x{otherworldly}")
    print(f"sunlight x{sunlight}")
    print(f"moonlight x{moonlight}")
    print(f"stellar x{stellar}")
    print(f"cosmic x{cosmic}")
    print(f"galactic x{galactic}")
    print(f"universal x{universal}")
    print(f"celestial x{celestial}")
    print(f"millenial x{millenial}")
    print(f"eternal x{eternal}")
    print(f"divine x{divine}")
    print(f"sacred x{sacred}")
    print(f"prismatic x{prismatic}")
    print(f"radiant x{radiant}")
    print(f"illustrious x{illustrious}")
    print(f"magnificent x{magnificent}")
    print(f"shining x{shining}")
    print(f"amethyst x{amethyst}")
    print(f"emerald x{emerald}")
    print(f"ruby x{ruby}")
    print(f"sapphire x{sapphire}")
    print(f"diamond x{diamond}")
    print(f"topaz x{topaz}")
    print(f"opal x{opal}")
    print(f"pearl x{pearl}")
    print(f"clean x{clean}")
    print(f"pristine x{pristine}")
    print(f"pure x{pure}")
    print(f"flawless x{flawless}")
    print(f"whole x{whole}")
    print(f"hollow x{hollow}")
    print(f"empty x{empty}")
    print(f"void x{void}")
    print(f"dark x{dark}")
    print(f"shadow x{shadow}")
    print(f"dusk x{dusk}")
    print(f"cruel x{cruel}")
    print(f"evil x{evil}")
    print(f"mystic x{mystic}")
    print(f"magic x{magic}")
    print(f"enchanted x{enchanted}")
    print(f"charmed x{charmed}")
    print(f"cursed x{cursed}")
    print(f"bound x{bound}")
    print(f"leashed x{leashed}")
    print(f"acidic x{acidic}")
    print(f"treasured x{treasured}")
    print(f"ancient x{ancient}")
    print(f"fabled x{fabled}")
    print(f"holy x{holy}")
    print(f"unholy x{unholy}")
    print(f"true x{true}")
    print(f"hidden x{hidden}")
    print(f"failed x{failed}")
    print(f"complete x{complete}")
    print(f"rarest drop out of {simulation} rolls: {max(returns, key=returns.count)}")
    input()
    print("Press enter to spin again, or type 'exit' to leave.")

clear()
print("welcome to gambling sim 2")
print("press enter to spin, type 'exit' to leave.")
choice = input()
while choice.lower() != "exit":
    clear()
    roll()
    choice = input()
    if choice.lower() == "exit":
        break
